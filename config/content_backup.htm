<h1>about</h1>
<p><strong>40823131 江建儒</strong></p>
<p>倉儲:<a href="https://github.com/40823131/cd2021">https://github.com/40823131/cd2021</a></p>
<p>網頁:<a href="https://40823131.github.io/cd2021/content/index.html">https://40823131.github.io/cd2021/</a></p>
<p>分組網頁:<a href="https://40823131.github.io/cd2021ag23/">https://40823131.github.io/cd2021ag23/</a></p>
<p><strong>歷年網頁</strong></p>
<p>cp2019:<a href="https://40823131.github.io/cp2019/">https://40823131.github.io/cp2019/</a></p>
<p>wcm2020:<a href="https://40823131.github.io/wcm2020/">https://40823131.github.io/wcm2020/</a></p>
<p>cad2020:<a href="https://40823131.github.io/cad2020/">https://40823131.github.io/cad2020/</a></p>
<p>wvp2021:<a href="https://40823131.github.io/wvp2021/">https://40823131.github.io/wvp2021/</a></p>
<p></p>
<p><img alt="" height="626" src="/images/IMG_4100.jpg" width="335"/></p>
<h1>Stage1</h1>
<h2>W1</h2>
<h3>建立網頁</h3>
<p>利用<a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 樣板，建立網頁，步驟如下:</p>
<p>1.按下Use this template，即可建立新倉儲，命名為cd2021。<img alt="" height="586" src="/images/chrome_N1cCh3VRgh.png" width="1200"/></p>
<p>2.利用隨身系統，輸入指令</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules https://github.com/40823131/cd2021.git</pre>
<p>將cd2021 clone進指定資料夾。</p>
<p>注意:此時不可使用git clone指令clone倉儲，而需改用git clone --recurse-submodules，須使用後述指令之原因為，指定倉儲已有(cmsimde)子模版，而git clone則是用來clone未有(cmsimde)子模板的倉儲，再行安裝子模組。</p>
<p><img alt="" height="512" src="/images/cmd_SXQtUG7rZ6.png" width="979"/></p>
<p>3.進入cmsimde資料夾並輸入指令python wsgi.py，即可對網頁內容進行編輯。</p>
<p><img alt="" height="512" src="/images/cmd_eki6lyJprk.png" width="979"/></p>
<h3>Blog建立</h3>
<p>利用leo對pelican.leo檔案進行編輯，以達成創建Blog的目的，操作如我過往在wcm2020專案中所提到的作法:<a href="https://40823131.github.io/wcm2020/content/%E4%BD%BF%E7%94%A8Leo%20Editor%E7%B7%A8%E8%AD%AFpelican.leo%E5%BB%BA%E7%AB%8Bblog%E7%B6%B2%E8%AA%8C.html">https://40823131.github.io/wcm2020/content/%E4%BD%BF%E7%94%A8Leo%20Editor%E7%B7%A8%E8%AD%AFpelican.leo%E5%BB%BA%E7%AB%8Bblog%E7%B6%B2%E8%AA%8C.html</a></p>
<p>需修改之部分均相同，不同之處為需將上述網站教學內容中所有wcm2020的部分改為cd2021，即可完成創建部落格。</p>
<h2>W2</h2>
<h3>分組(二人專案小組)</h3>
<p><span>標題: </span><span>2021-協同產品設計實習-stage1-ag26</span></p>
<p><span>        專題題目:自動寵物飼料機</span></p>
<p>        第一位組員學號:<span>40823131 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823131/cad2020">40823131</a><span><span> </span>| Site:<span> </span></span><a href="https://40823131.github.io/cad2020">40823131</a></p>
<p>        第二位組員學號:<span>40823116 </span><span>| Repository: <a href="https://github.com/40823116/cd2021">40823116</a><span><span> </span>| Site:<span> </span></span><a href="https://40823116.github.io/cd2021">40823116</a></span></p>
<h3>利用Hamachi建立虛擬區域網路</h3>
<p>利用Hamachi，達成協同編輯分組網站的目的。</p>
<p>首先需先下載Hamachi:<a href="https://www.vpn.net/">https://www.vpn.net/</a> </p>
<p>安裝後，可建立虛擬網路並設置密碼。</p>
<p><img alt="" height="391" src="/images/66666.png" width="460"/></p>
<p>將網路ID及密碼分享給組員，組員可借由連接上此虛擬區域網路，來達成就算在不同網域的情況下，也能夠借由連上組長的虛擬區網來進行小組網頁編輯。</p>
<p><img alt="" height="412" src="/images/1235555.png" width="276"/></p>
<p>在開啟小組網頁動態時的網址為https://[::]:9443</p>
<p>其中[::]其實就是組長的ipv6位址，取得方式如下。</p>
<p><img alt="" height="414" src="/images/amachi ipv6.png" width="275"/></p>
<p>將組長的ipv6位址取代網址中的[::]及可成功連上小組網頁動態進行編輯。</p>
<h3>利用虛擬主機建立Ethercalc伺服器</h3>
<p>使用的ubuntu版本為20.04</p>
<p><img alt="" height="392" src="/images/ubuntu20.04.png" width="700"/></p>
<p><strong>安裝curl</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install curl</pre>
<p><img alt="" height="625" src="/images/ubuntu20.04-curl.png" width="700"/></p>
<p><strong>納入 Nodesource repository</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</pre>
<p><img alt="" height="626" src="/images/ubuntu20.04-ethercalc-Nodesource repository.png" width="700"/><br/><strong>安裝 node.js</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install --assume-yes nodejs</pre>
<p><img alt="" height="605" src="/images/ubuntu20.04-ethercalc-nodejs.png" width="700"/></p>
<p><strong>安裝npm</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install npm</pre>
<p><img alt="" height="626" src="/images/ubuntu20.04-npm.png" width="700"/></p>
<p><strong>安裝 ethercalc</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo npm install -g ethercalc</pre>
<p><img alt="" height="627" src="/images/ubuntu20.04-ethercalc.png" width="700"/><br/><strong>開啟ethercalc server</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ethercalc</pre>
<p><img alt="" height="622" src="/images/ubuntu20.04-ethercalc-server.png" width="700"/></p>
<p><strong>使用firefox前往</strong> <a href="http://cd2021ag26:8000">http://cd2021ag26:8000</a> </p>
<p><img alt="" height="628" src="/images/ubuntu20.04-ethercalc-ok.png" width="700"/></p>
<h2>W3</h2>
<p>利用coppeliasim對已完成之成品進行模擬</p>
<h3><strong>初代機(version 1.0.0) ฅ^•ω•^ฅ</strong></h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1flnM51QFMFAkOVgVQ6EJE0GaNEwl4Kb4/view?usp=sharing">https://drive.google.com/file/d/1flnM51QFMFAkOVgVQ6EJE0GaNEwl4Kb4/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1OSYmHnWZztxp95ZPyKEOnh1jfADEdcgd/view?usp=sharing">https://drive.google.com/file/d/1OSYmHnWZztxp95ZPyKEOnh1jfADEdcgd/view?usp=sharing</a> </p>
<h3><strong>貳代機(version 2.0.0) ^ↀᴥↀ^</strong></h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1zx1sQH35AiW-sQGoPBtUzH_rCZiGe6E_/view?usp=sharing">https://drive.google.com/file/d/1zx1sQH35AiW-sQGoPBtUzH_rCZiGe6E_/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1om6qK5MmQifteyIR2raxF1kGzh5wU11E/view?usp=sharing">https://drive.google.com/file/d/1om6qK5MmQifteyIR2raxF1kGzh5wU11E/view?usp=sharing</a> </p>
<h3><strong>参代機(version 3.0.0) ଲ(^ⓛ ω ⓛ^)ଲ</strong></h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1abmOlBmMaag_MNbuSYV6TcFEhF2tMd4a/view?usp=sharing">https://drive.google.com/file/d/1abmOlBmMaag_MNbuSYV6TcFEhF2tMd4a/view?usp=sharing</a> </p>
<p>stl檔:</p>
<h3><strong>肆代機(version 4.0.0) V(=^･ω･^=)v</strong></h3>
<p>場景檔:<a href="https://drive.google.com/file/d/122SyiBWZQpqqTPrJkhfHVHMAU9kx8AMN/view?usp=sharing">https://drive.google.com/file/d/122SyiBWZQpqqTPrJkhfHVHMAU9kx8AMN/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1XN7ku3YdPHd53RKRVKYT9fSw2k-Rs_4s/view?usp=sharing">https://drive.google.com/file/d/1XN7ku3YdPHd53RKRVKYT9fSw2k-Rs_4s/view?usp=sharing</a> </p>
<h2>W4</h2>
<h3><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">利用程式方法更改影片檔名</yt-formatted-string></h3>
<p><span>使用python程式編寫進而達到更改影片名稱的效果，藉由最後修改時間做為線索來判斷組別，依此線索先利用程式取得各檔案最後修改時間，將取得的時間加入檔名前端進行排序，最後再進行檔名修整，修整為所要的格式。 1.取得最後修改時間，將時間加入檔頭後，放入串列。 2.使用串列排序，排列後更名(階段性更名，此步驟重點為順序)。 3.更改為最終需要的檔名格式。</span></p>
<p><span>程式碼如下。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
#sorted:排序。
def renameFilesAndSortedByTime(dirPath):
    #建立空串列。
    newlist = []
    #獲取檔名列表。
    files = os.listdir(dirPath)
    #獲取新增修改時間的檔名列表。
    for j in files:
        #獲取從1970年1月1日上午12時00分到檔案最後修改的UTC時間總共經過多少秒。
        createTime = os.path.getmtime(dirPath + j)
        # 將createTime中取得的秒數加入文件名稱前方，並加入串列以利排序。
        newlist.append(str(int(createTime)) + "-" + j)

    # 將串列進行排序
    newlist = sorted(newlist)
    #印出串列
    print(newlist)
    # range()內的數字經由len(newlist)決定
    #len()主要用來傳回串列參數L的長度，也就是包含幾個元素。
    for i in range(len(newlist)):
        #newlist[i][11:]
        #[i]的意思為串列中的第i項。
        #[11:]是用來取得檔案名稱從第12字元開始到最後字元的檔名。
        #使用上述兩個方法再配合迴圈可取得串列內所有檔案的舊檔名。
        oldName = newlist[i][11:]

        # 將秒數部分修改為序號，得到新的文件名。
        # 一定要按照下列寫法否則後期排序更名會出現錯誤。
        newName = newlist[i][11:]
        if (i + 1) &lt; 10:
            newName = '00' + str(i + 1) + newName
        elif (i + 1) &gt; 9 and (i + 1) &lt; 100:
            newName = '0' + str(i + 1) + newName
        else:
            newName = str(i + 1) + newName
        # dirpath為目標文件資料夾。
        # 重命名文件照修改時間加序号在前方。
        os.rename(dirPath + oldName, dirPath + newName)

if __name__ == '__main__':
    renameFilesAndSortedByTime("C:/Users/Administrator/Downloads/2021-03_2a_stage1/")
    print("rename ok!")
    path = 'C:/Users/Administrator/Downloads/2021-03_2a_stage1/'
    #轉入目標文件夾。
    file=os.listdir(path)
    print(file) #印出讀取到的檔名稱。
    n=0 #設定初始值。
    for i in file: #因為資料夾裡面的檔案都要重新更換名稱。
        oldname=path+file[n] #path為路徑名稱，[n]表示第n個檔案。
        newname=path+'cd2021_2a_'+str(n+1)+'.mp4' 
        os.rename(oldname,newname)
        print(oldname+'&gt;'+newname) 
        n=n+1 

    </pre>
<p>youtube:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8cxVGoyUiJM" title="YouTube video player" width="560"></iframe></p>
<h1>Stage2</h1>
<h2>W5</h2>
<h3>分組組員</h3>
<p><span>40823116 </span><span>| Repository: <a href="https://github.com/40823116/cd2021">40823116</a><span><span> </span>| Site:<span> </span></span><a href="https://40823116.github.io/cd2021">40823116</a></span></p>
<p><span>40823123 <span>| Repository: <a href="https://github.com/40823123/cd2021">40823123</a><span><span> </span>| Site:<span> </span></span><a href="https://40823123.github.io/cd2021">40823123</a></span></span></p>
<p><span>40823131 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823131/cd2021">40823131</a><span><span> </span>| Site:<span> </span></span><a href="https://40823131.github.io/cd2021">40823131</a></p>
<p><span>40823136 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823136/cd2021">40823136</a><span><span> </span>| Site:<span> </span></span><a href="https://40823136.github.io/cd2021">40823136</a></p>
<h2>W6</h2>
<h1>Heroku小組網站</h1>
<p><a href="https://stage2-ag11.herokuapp.com/content/index.html">https://stage2-ag11.herokuapp.com/content/index.html</a> </p>
<p><span>1.從 <a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a> 下載 Heroku CLI，</span><span>解開壓縮至隨身碟Y槽。</span></p>
<p><span><img alt="" height="727" src="https://40823131.github.io/stage2-ag11/images/chrome_YRcJDxDd8W.png" width="857"/></span></p>
<p>2.後修改start.bat檔案如下:</p>
<p><img alt="" height="531" src="https://40823131.github.io/stage2-ag11/images/SciTE_KSLXN2hCZT.png" width="1000"/></p>
<p>3.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">heroku login -i
heroku git:remote -a 名稱</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_59493"></div>
</div>
<div>
<div class="syntaxhighlighter html"></div>
<div class="syntaxhighlighter html" id="highlighter_498672"><img alt="" height="532" src="https://40823131.github.io/stage2-ag11/images/cmd_DENF4dCpy6.png" width="1464"/></div>
</div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git push heroku
</pre>
<p><span><img alt="" height="677" src="https://40823131.github.io/stage2-ag11/images/chrome_bM1YSm3QzO.png" width="1466"/><br/></span></p>

<p></p>