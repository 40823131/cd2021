<h1>about</h1>
<p><strong>40823131 江建儒  </strong>Mr. <span class="Y2IQFc" lang="en">Tabby</span></p>
<p>倉儲:<a href="https://github.com/40823131/cd2021">https://github.com/40823131/cd2021</a></p>
<p>網頁:<a href="https://40823131.github.io/cd2021/content/index.html">https://40823131.github.io/cd2021/</a></p>
<p>分組網頁:<a href="https://40823131.github.io/cd2021ag23/">https://40823131.github.io/cd2021ag23/</a></p>
<p><strong>歷年網頁</strong></p>
<p>cp2019:<a href="https://40823131.github.io/cp2019/">https://40823131.github.io/cp2019/</a></p>
<p>wcm2020:<a href="https://40823131.github.io/wcm2020/">https://40823131.github.io/wcm2020/</a></p>
<p>cad2020:<a href="https://40823131.github.io/cad2020/">https://40823131.github.io/cad2020/</a></p>
<p>wvp2021:<a href="https://40823131.github.io/wvp2021/">https://40823131.github.io/wvp2021/</a></p>
<p></p>
<p><img alt="" height="626" src="/images/IMG_4100.jpg" width="335"/></p>
<h1>Stage1</h1>
<h2>W1</h2>
<h3>建立網頁</h3>
<p>利用<a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 樣板，建立網頁，步驟如下:</p>
<p>1.按下Use this template，即可建立新倉儲，命名為cd2021。<img alt="" height="586" src="/images/chrome_N1cCh3VRgh.png" width="1200"/></p>
<p>2.利用隨身系統，輸入指令</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules https://github.com/40823131/cd2021.git</pre>
<p>將cd2021 clone進指定資料夾。</p>
<p>注意:此時不可使用git clone指令clone倉儲，而需改用git clone --recurse-submodules，須使用後述指令之原因為，指定倉儲已有(cmsimde)子模版，而git clone則是用來clone未有(cmsimde)子模板的倉儲，再行安裝子模組。</p>
<p><img alt="" height="512" src="/images/cmd_SXQtUG7rZ6.png" width="979"/></p>
<p>3.進入cmsimde資料夾並輸入指令python wsgi.py，即可對網頁內容進行編輯。</p>
<p><img alt="" height="512" src="/images/cmd_eki6lyJprk.png" width="979"/></p>
<h3>Blog建立</h3>
<p>利用leo對pelican.leo檔案進行編輯，以達成創建Blog的目的，操作如我過往在wcm2020專案中所提到的作法:<a href="https://40823131.github.io/wcm2020/content/%E4%BD%BF%E7%94%A8Leo%20Editor%E7%B7%A8%E8%AD%AFpelican.leo%E5%BB%BA%E7%AB%8Bblog%E7%B6%B2%E8%AA%8C.html">https://40823131.github.io/wcm2020/content/%E4%BD%BF%E7%94%A8Leo%20Editor%E7%B7%A8%E8%AD%AFpelican.leo%E5%BB%BA%E7%AB%8Bblog%E7%B6%B2%E8%AA%8C.html</a></p>
<p>需修改之部分均相同，不同之處為需將上述網站教學內容中所有wcm2020的部分改為cd2021，即可完成創建部落格。</p>
<h2>W2</h2>
<h3>分組(二人專案小組)</h3>
<p><span>標題: </span><span>2021-協同產品設計實習-stage1-ag26</span></p>
<p><span>        專題題目:自動寵物飼料機</span></p>
<p>        第一位組員學號:<span>40823131 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823131/cad2020">40823131</a><span><span> </span>| Site:<span> </span></span><a href="https://40823131.github.io/cad2020">40823131</a></p>
<p>        第二位組員學號:<span>40823116 </span><span>| Repository: <a href="https://github.com/40823116/cd2021">40823116</a><span><span> </span>| Site:<span> </span></span><a href="https://40823116.github.io/cd2021">40823116</a></span></p>
<h3>利用Hamachi建立虛擬區域網路</h3>
<p>利用Hamachi，達成協同編輯分組網站的目的。</p>
<p>首先需先下載Hamachi:<a href="https://www.vpn.net/">https://www.vpn.net/</a> </p>
<p>安裝後，可建立虛擬網路並設置密碼。</p>
<p><img alt="" height="391" src="/images/66666.png" width="460"/></p>
<p>將網路ID及密碼分享給組員，組員可借由連接上此虛擬區域網路，來達成就算在不同網域的情況下，也能夠借由連上組長的虛擬區網來進行小組網頁編輯。</p>
<p><img alt="" height="412" src="/images/1235555.png" width="276"/></p>
<p>在開啟小組網頁動態時的網址為https://[::]:9443</p>
<p>其中[::]其實就是組長的ipv6位址，取得方式如下。</p>
<p><img alt="" height="414" src="/images/amachi ipv6.png" width="275"/></p>
<p>將組長的ipv6位址取代網址中的[::]及可成功連上小組網頁動態進行編輯。</p>
<h3>利用虛擬主機建立Ethercalc伺服器</h3>
<p>使用的ubuntu版本為20.04</p>
<p><img alt="" height="392" src="/images/ubuntu20.04.png" width="700"/></p>
<p><strong>安裝curl</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install curl</pre>
<p><img alt="" height="625" src="/images/ubuntu20.04-curl.png" width="700"/></p>
<p><strong>納入 Nodesource repository</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</pre>
<p><img alt="" height="626" src="/images/ubuntu20.04-ethercalc-Nodesource repository.png" width="700"/><br/><strong>安裝 node.js</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install --assume-yes nodejs</pre>
<p><img alt="" height="605" src="/images/ubuntu20.04-ethercalc-nodejs.png" width="700"/></p>
<p><strong>安裝npm</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo apt install npm</pre>
<p><img alt="" height="626" src="/images/ubuntu20.04-npm.png" width="700"/></p>
<p><strong>安裝 ethercalc</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sudo npm install -g ethercalc</pre>
<p><img alt="" height="627" src="/images/ubuntu20.04-ethercalc.png" width="700"/><br/><strong>開啟ethercalc server</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ethercalc</pre>
<p><img alt="" height="622" src="/images/ubuntu20.04-ethercalc-server.png" width="700"/></p>
<p><strong>使用firefox前往</strong> <a href="http://cd2021ag26:8000">http://cd2021ag26:8000</a> </p>
<p><img alt="" height="628" src="/images/ubuntu20.04-ethercalc-ok.png" width="700"/></p>
<h2>W3</h2>
<p>利用coppeliasim對已完成之成品進行模擬</p>
<h3>初代機(version 1.0.0) ฅ^•ω•^ฅ</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1flnM51QFMFAkOVgVQ6EJE0GaNEwl4Kb4/view?usp=sharing">https://drive.google.com/file/d/1flnM51QFMFAkOVgVQ6EJE0GaNEwl4Kb4/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1OSYmHnWZztxp95ZPyKEOnh1jfADEdcgd/view?usp=sharing">https://drive.google.com/file/d/1OSYmHnWZztxp95ZPyKEOnh1jfADEdcgd/view?usp=sharing</a> </p>
<h3>貳代機(version 2.0.0) ^ↀᴥↀ^</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1zx1sQH35AiW-sQGoPBtUzH_rCZiGe6E_/view?usp=sharing">https://drive.google.com/file/d/1zx1sQH35AiW-sQGoPBtUzH_rCZiGe6E_/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1om6qK5MmQifteyIR2raxF1kGzh5wU11E/view?usp=sharing">https://drive.google.com/file/d/1om6qK5MmQifteyIR2raxF1kGzh5wU11E/view?usp=sharing</a> </p>
<h3>参代機(version 3.0.0) ଲ(^ⓛ ω ⓛ^)ଲ</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1abmOlBmMaag_MNbuSYV6TcFEhF2tMd4a/view?usp=sharing">https://drive.google.com/file/d/1abmOlBmMaag_MNbuSYV6TcFEhF2tMd4a/view?usp=sharing</a> </p>
<p>stl檔:</p>
<h3>肆代機(version 4.0.0) V(=^･ω･^=)v</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/122SyiBWZQpqqTPrJkhfHVHMAU9kx8AMN/view?usp=sharing">https://drive.google.com/file/d/122SyiBWZQpqqTPrJkhfHVHMAU9kx8AMN/view?usp=sharing</a> </p>
<p>stl檔:<a href="https://drive.google.com/file/d/1XN7ku3YdPHd53RKRVKYT9fSw2k-Rs_4s/view?usp=sharing">https://drive.google.com/file/d/1XN7ku3YdPHd53RKRVKYT9fSw2k-Rs_4s/view?usp=sharing</a> </p>
<h2>W4</h2>
<h3>利用程式方法更改影片檔名</h3>
<p><span>使用python程式編寫進而達到更改影片名稱的效果，藉由最後修改時間做為線索來判斷組別，依此線索先利用程式取得各檔案最後修改時間，將取得的時間加入檔名前端進行排序，最後再進行檔名修整，修整為所要的格式。 1.取得最後修改時間，將時間加入檔頭後，放入串列。 2.使用串列排序，排列後更名(階段性更名，此步驟重點為順序)。 3.更改為最終需要的檔名格式。</span></p>
<p><span>程式碼如下。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
#sorted:排序。
def renameFilesAndSortedByTime(dirPath):
    #建立空串列。
    newlist = []
    #獲取檔名列表。
    files = os.listdir(dirPath)
    #獲取新增修改時間的檔名列表。
    for j in files:
        #獲取從1970年1月1日上午12時00分到檔案最後修改的UTC時間總共經過多少秒。
        createTime = os.path.getmtime(dirPath + j)
        # 將createTime中取得的秒數加入文件名稱前方，並加入串列以利排序。
        newlist.append(str(int(createTime)) + "-" + j)

    # 將串列進行排序
    newlist = sorted(newlist)
    #印出串列
    print(newlist)
    # range()內的數字經由len(newlist)決定
    #len()主要用來傳回串列參數L的長度，也就是包含幾個元素。
    for i in range(len(newlist)):
        #newlist[i][11:]
        #[i]的意思為串列中的第i項。
        #[11:]是用來取得檔案名稱從第12字元開始到最後字元的檔名。
        #使用上述兩個方法再配合迴圈可取得串列內所有檔案的舊檔名。
        oldName = newlist[i][11:]

        # 將秒數部分修改為序號，得到新的文件名。
        # 一定要按照下列寫法否則後期排序更名會出現錯誤。
        newName = newlist[i][11:]
        if (i + 1) &lt; 10:
            newName = '00' + str(i + 1) + newName
        elif (i + 1) &gt; 9 and (i + 1) &lt; 100:
            newName = '0' + str(i + 1) + newName
        else:
            newName = str(i + 1) + newName
        # dirpath為目標文件資料夾。
        # 重命名文件照修改時間加序号在前方。
        os.rename(dirPath + oldName, dirPath + newName)

if __name__ == '__main__':
    renameFilesAndSortedByTime("C:/Users/Administrator/Downloads/2021-03_2a_stage1/")
    print("rename ok!")
    path = 'C:/Users/Administrator/Downloads/2021-03_2a_stage1/'
    #轉入目標文件夾。
    file=os.listdir(path)
    print(file) #印出讀取到的檔名稱。
    n=0 #設定初始值。
    for i in file: #因為資料夾裡面的檔案都要重新更換名稱。
        oldname=path+file[n] #path為路徑名稱，[n]表示第n個檔案。
        newname=path+'cd2021_2a_'+str(n+1)+'.mp4' 
        os.rename(oldname,newname)
        print(oldname+'&gt;'+newname) 
        n=n+1 

    </pre>
<p>youtube:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8cxVGoyUiJM" title="YouTube video player" width="560"></iframe></p>
<h1>Stage2</h1>
<h2>W5</h2>
<h3>分組組員</h3>
<p><span>40823116 </span><span>| Repository: <a href="https://github.com/40823116/cd2021">40823116</a><span><span> </span>| Site:<span> </span></span><a href="https://40823116.github.io/cd2021">40823116</a></span></p>
<p><span>40823123 <span>| Repository: <a href="https://github.com/40823123/cd2021">40823123</a><span><span> </span>| Site:<span> </span></span><a href="https://40823123.github.io/cd2021">40823123</a></span></span></p>
<p><span>40823131 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823131/cd2021">40823131</a><span><span> </span>| Site:<span> </span></span><a href="https://40823131.github.io/cd2021">40823131</a></p>
<p><span>40823136 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823136/cd2021">40823136</a><span><span> </span>| Site:<span> </span></span><a href="https://40823136.github.io/cd2021">40823136</a></p>
<h2>W6</h2>
<h3>Heroku小組網站</h3>
<p><a href="https://stage2-ag11.herokuapp.com/content/index.html">https://stage2-ag11.herokuapp.com/content/index.html</a> </p>
<p><span>1.從 <a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a> 下載 Heroku CLI，</span><span>解開壓縮至隨身碟Y槽。</span></p>
<p><span><img alt="" height="727" src="https://40823131.github.io/stage2-ag11/images/chrome_YRcJDxDd8W.png" width="857"/></span></p>
<p>2.後修改start.bat檔案如下:</p>
<p><img alt="" height="531" src="https://40823131.github.io/stage2-ag11/images/SciTE_KSLXN2hCZT.png" width="1000"/></p>
<p>3.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">heroku login -i
heroku git:remote -a 名稱</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_59493"></div>
</div>
<div>
<div class="syntaxhighlighter html"></div>
<div class="syntaxhighlighter html" id="highlighter_498672"><img alt="" height="532" src="https://40823131.github.io/stage2-ag11/images/cmd_DENF4dCpy6.png" width="1464"/></div>
</div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git push heroku
</pre>
<p><span><img alt="" height="677" src="https://40823131.github.io/stage2-ag11/images/chrome_bM1YSm3QzO.png" width="1466"/><br/></span></p>
<h2>W7</h2>
<h3>運輸小車繪製</h3>
<p>因為此次專案只有小車需繪製，所以仍採用Inventor(2018)進行繪製。</p>
<p>stl檔:<a href="https://drive.google.com/file/d/1HULgTeENzh3tGrNMneSqoOs3D_XNICU-/view?usp=sharing">https://drive.google.com/file/d/1HULgTeENzh3tGrNMneSqoOs3D_XNICU-/view?usp=sharing</a> </p>
<p>ipt檔:<a href="https://drive.google.com/file/d/11L6R_NlkVavxR1QjsBnwVqe7aqBPAduU/view?usp=sharing">https://drive.google.com/file/d/11L6R_NlkVavxR1QjsBnwVqe7aqBPAduU/view?usp=sharing</a> </p>
<p><img alt="" height="336" src="https://40823131.github.io/stage2-ag11/images/transporter.png" width="686"/></p>
<p>後續將進行程式編寫，以配合整體輸送帶的運作流程。</p>
<h3>push more easily</h3>
<p>因組長需推送更新至組員倉儲及維護heroku網頁，可利用建立批次檔節省時間，如下。</p>
<p>將下列存入Y槽中，存為push.bat。</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git push 40823123
git push 40823116
git push 40823136
git push heroku
</pre>
<p><img alt="" height="744" src="/images/push more easily.png" width="578"/></p>
<p>於隨身系統倉儲資料夾中輸入指令push即可使用，以便節省時間。</p>
<h3>程式控制</h3>
<p>運輸小車</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0r_2b2W192o" title="YouTube video player" width="560"></iframe></p>
<h2>W8</h2>
<h3>使用鍵盤程式控制小車移動</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/h55FSeGb_FU" title="YouTube video player" width="560"></iframe></p>
<h2>W9</h2>
<h3>成果(自動化生產線速率程式控制小車ver.)</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1S2tbA13XlZ3vy5mn0iWbZ6yM0EBS_wDQ/view?usp=sharing">速率控制版本</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/aYc9zRlRp4o" title="YouTube video player" width="560"></iframe></p>
<h3>成果(自動化生產線鍵盤程式控制小車ver.)</h3>
<p>場景檔:<a href="https://drive.google.com/file/d/1PAFOR7fcvU64vILdy1xCHxGaWyzhrd55/view">鍵盤控制版本</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/anxSaGoiDPM" title="YouTube video player" width="560"></iframe></p>
<h3>心得</h3>
<p>此次專案很遺憾的是沒能達成理想中的生產線(以sensor控制整個生產線運作)，因程式基礎薄弱，無法使用sensor控制，因此先以折衷的方式，以簡單的基礎作動方式做起，預計八人專案將更深入研究sensor控制的部分，已完成理想中的效果。</p>
<h1>Stage3</h1>
<h2>W10</h2>
<h3>task1</h3>
<p>利用python程式<span>讀取 <a href="http://mde.tw/cd2021/downloads/stage3/stage3_2a.txt">stage3_2a.txt</a>，建立 Stage3 的分組倉儲，分組網頁，以及各組員倉儲及網頁連結。</span></p>
<p><span><a href="https://github.com/40823131/cd2021/blob/1222b289d17f6bf0853732e264b564458d3a8e37/downloads/task1.7z">task1.7z</a></span></p>
<p><span>講解影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/WF1aijVRNG8" title="YouTube video player" width="560"></iframe></p>
<p><strong>程式碼(version1)</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char4
# no encoding = "UTF- 08" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format 23
    # has \n at the end of each line 13
    data = fh.readlines()
#print(len(data))1
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print('&lt;p&gt;'+group[0]+'|&lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt;|&lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
    for j in range(2,18,2):
        print('&lt;p&gt;'+group[j]+'|Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+'|Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')
</pre>
<p><strong>程式碼(version2)</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char4
# no encoding = "UTF-08" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format 23
    # has \n at the end of each line 13
    data = fh.readlines()
    data = [a.replace('4823122','40823122') for a in data]
    data = [c.replace('\t\t\t\t','') for c in data]
    print(data)
#print(len(data))1
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print('&lt;p&gt;'+group[0]+'|&lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt;|&lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
# the following will use group data to generate needed html

    for j in range(2,18,2):
        try:
            print('&lt;p&gt;'+group[j]+'|Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+'|Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')
        except:
            continue</pre>
<p><strong>程式碼(version3)</strong></p>
<p><strong>新增各組員協同分組網站。</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
    data = [a.replace('4823122','40823122') for a in data]
    data = [c.replace('\t\t\t\t','') for c in data]
    print(data)
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print('&lt;p&gt;'+group[0]+' | &lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt; | &lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
# the following will use group data to generate needed html

    for j in range(2,18,2):
        try:
            print('&lt;p&gt;'+group[j]+' | Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Group Website:'+'&lt;a href="https://'+group[j]+'.github.io/stage3-ag'+group[0][9]+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')
        except:
            continue</pre>
<p><strong>成果:</strong></p>
<p>stage3_ag1 | <a href="https://40823131.github.io/stage3-ag1">網站</a> | <a href="https://github.com/40823131/stage3-ag1">倉儲</a></p>
<p>40823131 | Website:<a href="https://40823131.github.io/cd2021">40823131</a> | Repository:<a href="https://github.com/40823131/cd2021">40823131</a> | Group Website:<a href="https://40823131.github.io/stage3-ag1">40823131</a></p>
<p>a40823112 | Website:<a href="https://a40823112.github.io/cd2021">a40823112</a> | Repository:<a href="https://github.com/a40823112/cd2021">a40823112</a> | Group Website:<a href="https://a40823112.github.io/stage3-ag1">a40823112</a></p>
<p>40823123 | Website:<a href="https://40823123.github.io/cd2021">40823123</a> | Repository:<a href="https://github.com/40823123/cd2021">40823123</a> | Group Website:<a href="https://40823123.github.io/stage3-ag1">40823123</a></p>
<p>40823145 | Website:<a href="https://40823145.github.io/cd2021">40823145</a> | Repository:<a href="https://github.com/40823145/cd2021">40823145</a> | Group Website:<a href="https://40823145.github.io/stage3-ag1">40823145</a></p>
<p>40823136 | Website:<a href="https://40823136.github.io/cd2021">40823136</a> | Repository:<a href="https://github.com/40823136/cd2021">40823136</a> | Group Website:<a href="https://40823136.github.io/stage3-ag1">40823136</a></p>
<p>40823109 | Website:<a href="https://40823109.github.io/cd2021">40823109</a> | Repository:<a href="https://github.com/40823109/cd2021">40823109</a> | Group Website:<a href="https://40823109.github.io/stage3-ag1">40823109</a></p>
<p>40823116 | Website:<a href="https://40823116.github.io/cd2021">40823116</a> | Repository:<a href="https://github.com/40823116/cd2021">40823116</a> | Group Website:<a href="https://40823116.github.io/stage3-ag1">40823116</a></p>
<p>40823108 | Website:<a href="https://40823108.github.io/cd2021">40823108</a> | Repository:<a href="https://github.com/40823108/cd2021">40823108</a> | Group Website:<a href="https://40823108.github.io/stage3-ag1">40823108</a></p>
<p>stage3_ag2 | <a href="https://40823151.github.io/stage3-ag2">網站</a> | <a href="https://github.com/40823151/stage3-ag2">倉儲</a></p>
<p>40823151 | Website:<a href="https://40823151.github.io/cd2021">40823151</a> | Repository:<a href="https://github.com/40823151/cd2021">40823151</a> | Group Website:<a href="https://40823151.github.io/stage3-ag2">40823151</a></p>
<p>40623121 | Website:<a href="https://40623121.github.io/cd2021">40623121</a> | Repository:<a href="https://github.com/40623121/cd2021">40623121</a> | Group Website:<a href="https://40623121.github.io/stage3-ag2">40623121</a></p>
<p>40871106 | Website:<a href="https://40871106.github.io/cd2021">40871106</a> | Repository:<a href="https://github.com/40871106/cd2021">40871106</a> | Group Website:<a href="https://40871106.github.io/stage3-ag2">40871106</a></p>
<p>40823102 | Website:<a href="https://40823102.github.io/cd2021">40823102</a> | Repository:<a href="https://github.com/40823102/cd2021">40823102</a> | Group Website:<a href="https://40823102.github.io/stage3-ag2">40823102</a></p>
<p>40823104 | Website:<a href="https://40823104.github.io/cd2021">40823104</a> | Repository:<a href="https://github.com/40823104/cd2021">40823104</a> | Group Website:<a href="https://40823104.github.io/stage3-ag2">40823104</a></p>
<p>40823106 | Website:<a href="https://40823106.github.io/cd2021">40823106</a> | Repository:<a href="https://github.com/40823106/cd2021">40823106</a> | Group Website:<a href="https://40823106.github.io/stage3-ag2">40823106</a></p>
<p>40823101 | Website:<a href="https://40823101.github.io/cd2021">40823101</a> | Repository:<a href="https://github.com/40823101/cd2021">40823101</a> | Group Website:<a href="https://40823101.github.io/stage3-ag2">40823101</a></p>
<p>40823132 | Website:<a href="https://40823132.github.io/cd2021">40823132</a> | Repository:<a href="https://github.com/40823132/cd2021">40823132</a> | Group Website:<a href="https://40823132.github.io/stage3-ag2">40823132</a></p>
<p>stage3_ag3 | <a href="https://40823119.github.io/stage3-ag3">網站</a> | <a href="https://github.com/40823119/stage3-ag3">倉儲</a></p>
<p>40823119 | Website:<a href="https://40823119.github.io/cd2021">40823119</a> | Repository:<a href="https://github.com/40823119/cd2021">40823119</a> | Group Website:<a href="https://40823119.github.io/stage3-ag3">40823119</a></p>
<p>40823150 | Website:<a href="https://40823150.github.io/cd2021">40823150</a> | Repository:<a href="https://github.com/40823150/cd2021">40823150</a> | Group Website:<a href="https://40823150.github.io/stage3-ag3">40823150</a></p>
<p>40823103 | Website:<a href="https://40823103.github.io/cd2021">40823103</a> | Repository:<a href="https://github.com/40823103/cd2021">40823103</a> | Group Website:<a href="https://40823103.github.io/stage3-ag3">40823103</a></p>
<p>40823107 | Website:<a href="https://40823107.github.io/cd2021">40823107</a> | Repository:<a href="https://github.com/40823107/cd2021">40823107</a> | Group Website:<a href="https://40823107.github.io/stage3-ag3">40823107</a></p>
<p>40523252 | Website:<a href="https://40523252.github.io/cd2021">40523252</a> | Repository:<a href="https://github.com/40523252/cd2021">40523252</a> | Group Website:<a href="https://40523252.github.io/stage3-ag3">40523252</a></p>
<p>40823154 | Website:<a href="https://40823154.github.io/cd2021">40823154</a> | Repository:<a href="https://github.com/40823154/cd2021">40823154</a> | Group Website:<a href="https://40823154.github.io/stage3-ag3">40823154</a></p>
<p>stage3_ag4 | <a href="https://40823142.github.io/stage3-ag4">網站</a> | <a href="https://github.com/40823142/stage3-ag4">倉儲</a></p>
<p>40823142 | Website:<a href="https://40823142.github.io/cd2021">40823142</a> | Repository:<a href="https://github.com/40823142/cd2021">40823142</a> | Group Website:<a href="https://40823142.github.io/stage3-ag4">40823142</a></p>
<p>40823144 | Website:<a href="https://40823144.github.io/cd2021">40823144</a> | Repository:<a href="https://github.com/40823144/cd2021">40823144</a> | Group Website:<a href="https://40823144.github.io/stage3-ag4">40823144</a></p>
<p>40823127 | Website:<a href="https://40823127.github.io/cd2021">40823127</a> | Repository:<a href="https://github.com/40823127/cd2021">40823127</a> | Group Website:<a href="https://40823127.github.io/stage3-ag4">40823127</a></p>
<p>40823148 | Website:<a href="https://40823148.github.io/cd2021">40823148</a> | Repository:<a href="https://github.com/40823148/cd2021">40823148</a> | Group Website:<a href="https://40823148.github.io/stage3-ag4">40823148</a></p>
<p>40823121 | Website:<a href="https://40823121.github.io/cd2021">40823121</a> | Repository:<a href="https://github.com/40823121/cd2021">40823121</a> | Group Website:<a href="https://40823121.github.io/stage3-ag4">40823121</a></p>
<p>40823135 | Website:<a href="https://40823135.github.io/cd2021">40823135</a> | Repository:<a href="https://github.com/40823135/cd2021">40823135</a> | Group Website:<a href="https://40823135.github.io/stage3-ag4">40823135</a></p>
<p>40823114 | Website:<a href="https://40823114.github.io/cd2021">40823114</a> | Repository:<a href="https://github.com/40823114/cd2021">40823114</a> | Group Website:<a href="https://40823114.github.io/stage3-ag4">40823114</a></p>
<p>40823146 | Website:<a href="https://40823146.github.io/cd2021">40823146</a> | Repository:<a href="https://github.com/40823146/cd2021">40823146</a> | Group Website:<a href="https://40823146.github.io/stage3-ag4">40823146</a></p>
<p>stage3_ag5 | <a href="https://40823111.github.io/stage3-ag5">網站</a> | <a href="https://github.com/40823111/stage3-ag5">倉儲</a></p>
<p>40823111 | Website:<a href="https://40823111.github.io/cd2021">40823111</a> | Repository:<a href="https://github.com/40823111/cd2021">40823111</a> | Group Website:<a href="https://40823111.github.io/stage3-ag5">40823111</a></p>
<p>40823115 | Website:<a href="https://40823115.github.io/cd2021">40823115</a> | Repository:<a href="https://github.com/40823115/cd2021">40823115</a> | Group Website:<a href="https://40823115.github.io/stage3-ag5">40823115</a></p>
<p>40823128 | Website:<a href="https://40823128.github.io/cd2021">40823128</a> | Repository:<a href="https://github.com/40823128/cd2021">40823128</a> | Group Website:<a href="https://40823128.github.io/stage3-ag5">40823128</a></p>
<p>40823120 | Website:<a href="https://40823120.github.io/cd2021">40823120</a> | Repository:<a href="https://github.com/40823120/cd2021">40823120</a> | Group Website:<a href="https://40823120.github.io/stage3-ag5">40823120</a></p>
<p>40823140 | Website:<a href="https://40823140.github.io/cd2021">40823140</a> | Repository:<a href="https://github.com/40823140/cd2021">40823140</a> | Group Website:<a href="https://40823140.github.io/stage3-ag5">40823140</a></p>
<p>40823124 | Website:<a href="https://40823124.github.io/cd2021">40823124</a> | Repository:<a href="https://github.com/40823124/cd2021">40823124</a> | Group Website:<a href="https://40823124.github.io/stage3-ag5">40823124</a></p>
<p>40823139 | Website:<a href="https://40823139.github.io/cd2021">40823139</a> | Repository:<a href="https://github.com/40823139/cd2021">40823139</a> | Group Website:<a href="https://40823139.github.io/stage3-ag5">40823139</a></p>
<p>40823126 | Website:<a href="https://40823126.github.io/cd2021">40823126</a> | Repository:<a href="https://github.com/40823126/cd2021">40823126</a> | Group Website:<a href="https://40823126.github.io/stage3-ag5">40823126</a></p>
<p>stage3_ag6 | <a href="https://40823152.github.io/stage3-ag6">網站</a> | <a href="https://github.com/40823152/stage3-ag6">倉儲</a></p>
<p>40823152 | Website:<a href="https://40823152.github.io/cd2021">40823152</a> | Repository:<a href="https://github.com/40823152/cd2021">40823152</a> | Group Website:<a href="https://40823152.github.io/stage3-ag6">40823152</a></p>
<p>40823110 | Website:<a href="https://40823110.github.io/cd2021">40823110</a> | Repository:<a href="https://github.com/40823110/cd2021">40823110</a> | Group Website:<a href="https://40823110.github.io/stage3-ag6">40823110</a></p>
<p>40823122 | Website:<a href="https://40823122.github.io/cd2021">40823122</a> | Repository:<a href="https://github.com/40823122/cd2021">40823122</a> | Group Website:<a href="https://40823122.github.io/stage3-ag6">40823122</a></p>
<p>40823125 | Website:<a href="https://40823125.github.io/cd2021">40823125</a> | Repository:<a href="https://github.com/40823125/cd2021">40823125</a> | Group Website:<a href="https://40823125.github.io/stage3-ag6">40823125</a></p>
<p>40823117 | Website:<a href="https://40823117.github.io/cd2021">40823117</a> | Repository:<a href="https://github.com/40823117/cd2021">40823117</a> | Group Website:<a href="https://40823117.github.io/stage3-ag6">40823117</a></p>
<p>40823129 | Website:<a href="https://40823129.github.io/cd2021">40823129</a> | Repository:<a href="https://github.com/40823129/cd2021">40823129</a> | Group Website:<a href="https://40823129.github.io/stage3-ag6">40823129</a></p>
<p>40823149 | Website:<a href="https://40823149.github.io/cd2021">40823149</a> | Repository:<a href="https://github.com/40823149/cd2021">40823149</a> | Group Website:<a href="https://40823149.github.io/stage3-ag6">40823149</a></p>
<p>40823153 | Website:<a href="https://40823153.github.io/cd2021">40823153</a> | Repository:<a href="https://github.com/40823153/cd2021">40823153</a> | Group Website:<a href="https://40823153.github.io/stage3-ag6">40823153</a></p><h3>task2</h3>
<p><span>將個人在 stage1 與 stage2 所完成的 coppeliasim 場景, 採 Python remote API 進行操控.</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1hFdsrUOOTM" title="YouTube video player" width="560"></iframe></p>
<p>Python remote API程式:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import sys
# child threaded script: 
#simExtRemoteApiStart(19997)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('192.168.50.154', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,U_motor_handle=vrep.simxGetObjectHandle(clientID,'U',vrep.simx_opmode_oneshot_wait)
 
errorCode,D_motor_handle=vrep.simxGetObjectHandle(clientID,'D',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find U or D motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,U_motor_handle,0, vrep.simx_opmode_oneshot_wait)
errorCode=vrep.simxSetJointTargetVelocity(clientID,D_motor_handle,0, vrep.simx_opmode_oneshot_wait)
</pre>
<p><span> </span></p>